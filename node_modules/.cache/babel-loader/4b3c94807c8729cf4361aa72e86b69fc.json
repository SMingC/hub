{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport Header from \"@/components/Headers/Header.vue\";\nimport Courses from \"@/views/Courses.vue\";\nimport \"markdown-it-vue/dist/markdown-it-vue.css\";\nexport default {\n  name: \"Team\",\n  components: {\n    Header,\n    Courses\n  },\n\n  data() {\n    return {\n      currentScroll: 0,\n      contents: []\n    };\n  },\n\n  computed: {\n    isDarkMode() {\n      return this.$store.getters.isDarkMode;\n    }\n\n  },\n\n  async created() {\n    this.contents = await this.getcartoonUrl(); // console.log(this.contents);\n  },\n\n  mounted() {\n    window.addEventListener(\"scroll\", this.handleScroll);\n  },\n\n  beforeDestroy() {\n    window.removeEventListener(\"scroll\", this.handleScroll);\n  },\n\n  methods: {\n    handleScroll() {\n      this.currentScroll = window.pageYOffset; //表示当前滚动的位置\n    },\n\n    goTeams(index) {\n      this.$router.push({\n        name: \"course\",\n        query: {\n          index: index\n        }\n      });\n    },\n\n    getcartoonUrl: async () => {\n      const query = `{\n        advancedReactCollection{\n          items{\n            illustration{\n              url\n            }\n            title,\n            description,\n          }\n        }\n      }`;\n      const fetchUrl = `https://graphql.contentful.com/content/v1/spaces/${process.env.VUE_APP_CONTENTFUL_SPACE_ID}/`;\n      const fetchOptions = {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${process.env.VUE_APP_CONTENTFUL_ACCESS_TOKEN}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          query\n        })\n      };\n\n      try {\n        const response = await fetch(fetchUrl, fetchOptions).then(response => response.json());\n        return response.data.advancedReactCollection.items;\n      } catch (error) {\n        throw new Error(\"Could not receive the data from Contentful!\");\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AA6CA;AACA;AACA;AACA;EACAA,YADA;EAEAC;IACAC,MADA;IAEAC;EAFA,CAFA;;EAMAC;IACA;MACAC,gBADA;MAEAC;IAFA;EAIA,CAXA;;EAYAC;IACAC;MACA;IACA;;EAHA,CAZA;;EAiBA;IACA,2CADA,CAEA;EACA,CApBA;;EAqBAC;IACAC;EACA,CAvBA;;EAwBAC;IACAD;EACA,CA1BA;;EA2BAE;IACAC;MACA,wCADA,CACA;IACA,CAHA;;IAIAC;MACA;QACAd,cADA;QAEAe;UACAC;QADA;MAFA;IAMA,CAXA;;IAYAC;MACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAVA;MAWA;MAEA;QACAC,cADA;QAEAC;UACAC,sEADA;UAEA;QAFA,CAFA;QAMAC;UAAAN;QAAA;MANA;;MASA;QACA,sEACAO,eADA;QAGA;MACA,CALA,CAKA;QACA;MACA;IACA;EA3CA;AA3BA","names":["name","components","Header","Courses","data","currentScroll","contents","computed","isDarkMode","mounted","window","beforeDestroy","methods","handleScroll","goTeams","query","index","getcartoonUrl","method","headers","Authorization","body","response"],"sourceRoot":"src/views","sources":["Team.vue"],"sourcesContent":["<template>\n  <div class=\"manage\">\n    <Header />\n\n    <div class=\"container\">\n      <h1 :class=\"{ dark: !isDarkMode, light: isDarkMode }\">Team</h1>\n      <div class=\"cards\">\n        <template v-for=\"(content, index) in contents\">\n          <transition\n            :key=\"content.url\"\n            appear\n            appear-active-class=\"animate__animated animate__flipInX\"\n          >\n            <a\n              class=\"card\"\n              style=\"cursor: pointer\"\n              :id=\"`card-${index + 1}`\"\n              :class=\"{ 'light-card': !isDarkMode, 'dark-card': isDarkMode }\"\n              @click=\"goTeams(index)\"\n            >\n              <img\n                :src=\"content.illustration.url\"\n                class=\"card-header\"\n                :class=\"{\n                  'light-header': !isDarkMode,\n                  'dark-header': isDarkMode,\n                }\"\n              />\n              <h3 :class=\"{ dark: !isDarkMode, light: isDarkMode }\">\n                {{ index + 1 + \".\" + content.title }}\n              </h3>\n              <p\n                :class=\"{ 'light-text': isDarkMode, 'dark-text': !isDarkMode }\"\n              >\n                {{ content.description }}\n              </p>\n            </a>\n          </transition>\n        </template>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Header from \"@/components/Headers/Header.vue\";\nimport Courses from \"@/views/Courses.vue\";\nimport \"markdown-it-vue/dist/markdown-it-vue.css\";\nexport default {\n  name: \"Team\",\n  components: {\n    Header,\n    Courses,\n  },\n  data() {\n    return {\n      currentScroll: 0,\n      contents: [],\n    };\n  },\n  computed: {\n    isDarkMode() {\n      return this.$store.getters.isDarkMode;\n    },\n  },\n  async created() {\n    this.contents = await this.getcartoonUrl();\n    // console.log(this.contents);\n  },\n  mounted() {\n    window.addEventListener(\"scroll\", this.handleScroll);\n  },\n  beforeDestroy() {\n    window.removeEventListener(\"scroll\", this.handleScroll);\n  },\n  methods: {\n    handleScroll() {\n      this.currentScroll = window.pageYOffset; //表示当前滚动的位置\n    },\n    goTeams(index) {\n      this.$router.push({\n        name: \"course\",\n        query: {\n          index: index,\n        },\n      });\n    },\n    getcartoonUrl: async () => {\n      const query = `{\n        advancedReactCollection{\n          items{\n            illustration{\n              url\n            }\n            title,\n            description,\n          }\n        }\n      }`;\n      const fetchUrl = `https://graphql.contentful.com/content/v1/spaces/${process.env.VUE_APP_CONTENTFUL_SPACE_ID}/`;\n\n      const fetchOptions = {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${process.env.VUE_APP_CONTENTFUL_ACCESS_TOKEN}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ query }),\n      };\n\n      try {\n        const response = await fetch(fetchUrl, fetchOptions).then((response) =>\n          response.json()\n        );\n        return response.data.advancedReactCollection.items;\n      } catch (error) {\n        throw new Error(\"Could not receive the data from Contentful!\");\n      }\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n@import \"@/global-styles/colors.scss\";\n@import \"@/global-styles/typography.scss\";\n\n.backgroundWrap {\n  position: relative;\n  .waves {\n    position: absolute;\n    z-index: -1;\n  }\n  .Background {\n    position: absolute;\n    width: 100%;\n    height: 800px;\n    background: linear-gradient(180deg, #4316db 0%, #9076e7 100%);\n    z-index: -1;\n  }\n}\n.illustration {\n  width: 700px;\n  @media (max-width: 900px) {\n    width: 350px;\n  }\n}\n.manage {\n  overflow-x: hidden;\n}\n.container {\n  padding-left: 15%;\n  padding-right: 10%;\n}\n\n.cards {\n  margin: 0 -20px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: space-evenly;\n}\n\n#card-1 {\n  animation-delay: 0s;\n}\n#card-2 {\n  animation-delay: 0.5s;\n}\n#card-3 {\n  animation-delay: 1s;\n}\n#card-4 {\n  animation-delay: 1.5s;\n}\n#card-5 {\n  animation-delay: 2s;\n}\n#card-6 {\n  animation-delay: 2.5s;\n}\n\n.card {\n  width: 100%;\n  max-width: 300px;\n  height: 420px;\n  border-radius: 10px;\n  margin: 20px;\n}\n\n.light-card {\n  background: #ffffff;\n  box-shadow: 0px 15px 30px rgba(103, 110, 144, 0.15);\n  &:hover {\n    box-shadow: 0 4px 4px rgba(103, 110, 144, 0.05),\n      0 2px 2px rgba(103, 110, 144, 0.05);\n  }\n}\n\n.dark-card {\n  background: $super-dark-blue;\n  box-shadow: rgba(0, 0, 0, 0.25) 0px 20px 40px;\n  &:hover {\n    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25), 0 2px 2px rgba(0, 0, 0, 0.25);\n  }\n}\n\n.card-header {\n  width: 100%;\n  border-radius: 10px 10px 0 0;\n}\n\n.light-header {\n  background: $light-gray;\n}\n\n.dark-header {\n  background: #283049;\n}\n\nh1 {\n  margin-top: 40px;\n}\n\nh3 {\n  margin-bottom: 16px;\n}\n\nh3.dark {\n  @include heading-3($black);\n}\n\nh3.light {\n  @include heading-3($white);\n}\n\np {\n  font-size: 15px;\n  line-height: 24px;\n  text-align: left;\n  margin-left: 16px;\n  margin-top: 0;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}