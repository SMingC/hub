{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport MarkdownItVue from \"markdown-it-vue\";\nimport Header from \"@/components/Headers/Header.vue\";\nimport PurchaseButton from \"@/components/button/PurchaseButton.vue\";\nexport default {\n  async mounted() {\n    this.contents = await this.getcartoonUrl(); // console.log(this.contents);\n\n    const query = this.$route.query;\n    this.index = query.index;\n\n    if (sessionStorage.getItem(\"email\") !== null) {\n      this.isPro = true;\n    }\n  },\n\n  data() {\n    return {\n      contents: [],\n      index: 0,\n      isPro: false\n    };\n  },\n\n  components: {\n    MarkdownItVue,\n    Header,\n    PurchaseButton\n  },\n  computed: {\n    isDarkMode() {\n      return this.$store.getters.isDarkMode;\n    }\n\n  },\n  methods: {\n    getcartoonUrl: async () => {\n      const query = `{\n        advancedReactCollection{\n          items{\n            illustration{\n              url\n            }\n            title,\n            description,\n            content\n          }\n        }\n      }`;\n      const fetchUrl = `https://graphql.contentful.com/content/v1/spaces/${process.env.VUE_APP_CONTENTFUL_SPACE_ID}/`;\n      const fetchOptions = {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${process.env.VUE_APP_CONTENTFUL_ACCESS_TOKEN}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          query\n        })\n      };\n\n      try {\n        const response = await fetch(fetchUrl, fetchOptions).then(response => response.json());\n        return response.data.advancedReactCollection.items;\n      } catch (error) {\n        throw new Error(\"Could not receive the data from Contentful!\");\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AAqCA;AACA;AACA;AACA;EACA;IACA,2CADA,CAEA;;IACA;IACA;;IACA;MACA;IACA;EACA,CATA;;EAUAA;IACA;MACAC,YADA;MAEAC,QAFA;MAGAC;IAHA;EAKA,CAhBA;;EAiBAC;IAAAC;IAAAC;IAAAC;EAAA,CAjBA;EAkBAC;IACAC;MACA;IACA;;EAHA,CAlBA;EAuBAC;IACAC;MACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAXA;MAYA;MAEA;QACAC,cADA;QAEAC;UACAC,sEADA;UAEA;QAFA,CAFA;QAMAC;UAAAC;QAAA;MANA;;MASA;QACA,sEACAC,eADA;QAGA;MACA,CALA,CAKA;QACA;MACA;IACA;EAjCA;AAvBA","names":["data","contents","index","isPro","components","MarkdownItVue","Header","PurchaseButton","computed","isDarkMode","methods","getcartoonUrl","method","headers","Authorization","body","query","response"],"sourceRoot":"src/views","sources":["Courses.vue"],"sourcesContent":["<template>\n  <div>\n    <Header />\n    <div class=\"backgroundWrap\">\n      <img src=\"@/assets/waves/hero-wave1.svg\" />\n      <img src=\"@/assets/waves/hero-wave2.svg\" />\n      <img src=\"@/assets/waves/hero-wave3.svg\" />\n    </div>\n    <div class=\"CourseWrapper\">\n      <div class=\"CourseHeroWrapper\">\n        <img\n          :src=\"contents[index].illustration.url\"\n          :alt=\"url\"\n          class=\"Illustration\"\n        />\n        <h1\n          :class=\"{ 'light-text': isDarkMode, 'dark-text': !isDarkMode }\"\n          class=\"Title\"\n        >\n          {{ contents[index].title }}\n        </h1>\n        <p\n          :class=\"{ 'light-text': isDarkMode, 'dark-text': !isDarkMode }\"\n          class=\"Description\"\n        >\n          {{ contents[index].description }}\n        </p>\n        <PurchaseButton v-show=\"!isPro\" style=\"margin: 40px\" />\n      </div>\n    </div>\n    <div class=\"Coding\">\n      <markdown-it-vue v-show=\"isPro\" :content=\"contents[index].content\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport MarkdownItVue from \"markdown-it-vue\";\nimport Header from \"@/components/Headers/Header.vue\";\nimport PurchaseButton from \"@/components/button/PurchaseButton.vue\";\nexport default {\n  async mounted() {\n    this.contents = await this.getcartoonUrl();\n    // console.log(this.contents);\n    const query = this.$route.query;\n    this.index = query.index;\n    if (sessionStorage.getItem(\"email\") !== null) {\n      this.isPro = true;\n    }\n  },\n  data() {\n    return {\n      contents: [],\n      index: 0,\n      isPro: false,\n    };\n  },\n  components: { MarkdownItVue, Header, PurchaseButton },\n  computed: {\n    isDarkMode() {\n      return this.$store.getters.isDarkMode;\n    },\n  },\n  methods: {\n    getcartoonUrl: async () => {\n      const query = `{\n        advancedReactCollection{\n          items{\n            illustration{\n              url\n            }\n            title,\n            description,\n            content\n          }\n        }\n      }`;\n      const fetchUrl = `https://graphql.contentful.com/content/v1/spaces/${process.env.VUE_APP_CONTENTFUL_SPACE_ID}/`;\n\n      const fetchOptions = {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${process.env.VUE_APP_CONTENTFUL_ACCESS_TOKEN}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ query }),\n      };\n\n      try {\n        const response = await fetch(fetchUrl, fetchOptions).then((response) =>\n          response.json()\n        );\n        return response.data.advancedReactCollection.items;\n      } catch (error) {\n        throw new Error(\"Could not receive the data from Contentful!\");\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"@/global-styles/mixin.scss\";\n@import \"@/global-styles/colors.scss\";\n@import \"@/global-styles/typography.scss\";\n\n.CourseWrapper {\n  display: grid;\n  background: linear-gradient(200.44deg, #4316db 13.57%, #9076e7 98.38%);\n  justify-content: center;\n  text-align: center;\n}\n.CourseHeroWrapper {\n  display: grid;\n  justify-items: center;\n  gap: 20px;\n  max-width: 1300px;\n  margin: 0 auto;\n  padding: 40px;\n}\n.Illustration {\n  padding-top: 140px;\n  max-width: 400px;\n  width: 100%;\n  margin: 0 auto;\n}\n.Title {\n  max-width: 500px;\n  margin: 0 auto;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 60px;\n  @media (max-width: 900px) {\n    font-size: 45px;\n  }\n  line-height: 72px;\n  mix-blend-mode: normal;\n  text-shadow: 0px 20px 40px rgba(0, 0, 0, 0.3);\n}\n.Description {\n  max-width: 600px;\n  margin: 0 auto;\n  font-style: normal;\n  font-size: 20px;\n  line-height: 140%;\n  mix-blend-mode: normal;\n}\n.Coding {\n  font-family: BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell,\n    \"Open Sans\", \"Helvetica Neue\", sans-serif;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 20px;\n  line-height: 140%;\n  max-width: 712px;\n  margin: 0 auto;\n  text-align: start;\n  padding: 0px 20px 100px;\n\n  @media (max-width: 414px) {\n    font-size: 17px;\n  }\n\n  img,\n  video {\n    margin: 20px 0;\n    width: 100%;\n    border-radius: 20px;\n    box-sizing: border-box;\n    overflow: hidden;\n  }\n\n  iframe {\n    margin: 20px 0;\n    width: 100%;\n    border-radius: 20px;\n    box-sizing: border-box;\n    overflow: hidden;\n  }\n\n  h2 {\n    padding: 20px 0;\n    font-size: 32px;\n    line-height: 120%;\n  }\n\n  h3 {\n    padding: 20px 0 0;\n    font-size: 24px;\n    text-transform: uppercase;\n    font-weight: 500;\n    opacity: 0.7;\n  }\n\n  h2,\n  h3 {\n    margin-top: 50px;\n  }\n\n  p {\n    text-align: left;\n    color: rgba(0, 0, 0, 0.8);\n  }\n\n  a {\n    text-decoration: none;\n    font-weight: 600;\n    color: rgb(0, 207, 253);\n  }\n\n  blockquote {\n    padding: 0 16px 0 50px;\n    background-repeat: no-repeat;\n    background-position: 14px 2px;\n    p {\n      font-size: 28px;\n      font-weight: 500;\n      line-height: 140%;\n    }\n  }\n\n  pre {\n    border-radius: 16px;\n  }\n\n  code {\n    font-size: 17px;\n    font-family: \"SF Mono\", -apple-system, system-ui, BlinkMacSystemFont,\n      \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif;\n    font-weight: 500;\n  }\n\n  ol {\n    padding: 0;\n  }\n\n  @media (max-width: 740px) {\n    font-size: 18px;\n    padding: 0 30px;\n\n    .Content {\n      margin: 50px 20px;\n    }\n    p {\n      font-size: 18px;\n    }\n    h2 {\n      font-size: 28px;\n    }\n    h3 {\n      font-size: 20px;\n    }\n    blockquote {\n      margin: 0;\n      p {\n        font-size: 20px;\n      }\n    }\n  }\n\n  @media (max-width: 414px) {\n    padding: 0 20px;\n    code {\n      font-size: 15px;\n    }\n    blockquote {\n      margin: 0;\n      p {\n        font-size: 17px;\n      }\n    }\n  }\n\n  /* Theme */\n  code[class*=\"language-\"],\n  pre[class*=\"language-\"] {\n    text-align: left;\n    white-space: pre;\n    word-spacing: normal;\n    word-break: normal;\n    word-wrap: normal;\n    color: #eee;\n    background: #222;\n    line-height: 1.5em;\n\n    -moz-tab-size: 4;\n    -o-tab-size: 4;\n    tab-size: 4;\n\n    -webkit-hyphens: none;\n    -moz-hyphens: none;\n    -ms-hyphens: none;\n    hyphens: none;\n\n    @media (prefers-color-scheme: dark) {\n      background: #141432;\n    }\n  }\n\n  code[class*=\"language-\"]::-moz-selection,\n  pre[class*=\"language-\"]::-moz-selection,\n  code[class*=\"language-\"] ::-moz-selection,\n  pre[class*=\"language-\"] ::-moz-selection {\n    background: #363636;\n  }\n\n  code[class*=\"language-\"]::selection,\n  pre[class*=\"language-\"]::selection,\n  code[class*=\"language-\"] ::selection,\n  pre[class*=\"language-\"] ::selection {\n    background: #363636;\n  }\n\n  :not(pre) > code[class*=\"language-\"] {\n    white-space: normal;\n    border-radius: 0.2em;\n    padding: 0.1em;\n  }\n\n  pre[class*=\"language-\"] {\n    overflow: auto;\n    position: relative;\n    margin: 0.5em 0;\n    padding: 1.25em 1em;\n  }\n\n  .language-css > code,\n  .language-sass > code,\n  .language-scss > code {\n    color: #fd9170;\n  }\n\n  [class*=\"language-\"] .namespace {\n    opacity: 0.7;\n  }\n\n  .token.atrule {\n    color: #c792ea;\n  }\n\n  .token.attr-name {\n    color: #ffcb6b;\n  }\n\n  .token.attr-value {\n    color: #a5e844;\n  }\n\n  .token.attribute {\n    color: #a5e844;\n  }\n\n  .token.boolean {\n    color: #c792ea;\n  }\n\n  .token.builtin {\n    color: #ffcb6b;\n  }\n\n  .token.cdata {\n    color: #80cbc4;\n  }\n\n  .token.char {\n    color: #80cbc4;\n  }\n\n  .token.class {\n    color: #ffcb6b;\n  }\n\n  .token.class-name {\n    color: #f2ff00;\n  }\n\n  .token.comment {\n    color: #616161;\n  }\n\n  .token.constant {\n    color: #c792ea;\n  }\n\n  .token.deleted {\n    color: #ff6666;\n  }\n\n  .token.doctype {\n    color: #616161;\n  }\n\n  .token.entity {\n    color: #ff6666;\n  }\n\n  .token.function {\n    color: #c792ea;\n  }\n\n  .token.hexcode {\n    color: #f2ff00;\n  }\n\n  .token.id {\n    color: #c792ea;\n    font-weight: bold;\n  }\n\n  .token.important {\n    color: #c792ea;\n    font-weight: bold;\n  }\n\n  .token.inserted {\n    color: #80cbc4;\n  }\n\n  .token.keyword {\n    color: #c792ea;\n  }\n\n  .token.number {\n    color: #fd9170;\n  }\n\n  .token.operator {\n    color: #89ddff;\n  }\n\n  .token.prolog {\n    color: #616161;\n  }\n\n  .token.property {\n    color: #80cbc4;\n  }\n\n  .token.pseudo-class {\n    color: #a5e844;\n  }\n\n  .token.pseudo-element {\n    color: #a5e844;\n  }\n\n  .token.punctuation {\n    color: #89ddff;\n  }\n\n  .token.regex {\n    color: #f2ff00;\n  }\n\n  .token.selector {\n    color: #ff6666;\n  }\n\n  .token.string {\n    color: #a5e844;\n  }\n\n  .token.symbol {\n    color: #c792ea;\n  }\n\n  .token.tag {\n    color: #ff6666;\n  }\n\n  .token.unit {\n    color: #fd9170;\n  }\n\n  .token.url {\n    color: #ff6666;\n  }\n\n  .token.variable {\n    color: #ff6666;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}