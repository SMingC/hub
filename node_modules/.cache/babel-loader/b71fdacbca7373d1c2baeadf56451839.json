{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport MarkdownItVue from \"markdown-it-vue\";\nimport Header from \"@/components/Headers/Header.vue\";\nimport PurchaseButton from \"@/components/button/PurchaseButton.vue\";\nexport default {\n  async created() {\n    this.contents = await this.getcartoonUrl(); // console.log(this.contents);\n\n    const params = this.$route.params;\n    this.index = params.index;\n\n    if (sessionStorage.getItem(\"email\") !== null) {\n      isPro = true;\n    }\n  },\n\n  data() {\n    return {\n      contents: [],\n      index: 0,\n      isPro: false,\n      options: {\n        linkAttributes: {\n          attrs: {\n            target: \"_blank\",\n            rel: \"noopener\"\n          }\n        },\n        katex: {\n          throwOnError: false,\n          errorColor: \"#cc0000\"\n        },\n        icons: \"font-awesome\",\n        githubToc: {\n          tocFirstLevel: 2,\n          tocLastLevel: 3,\n          tocClassName: \"toc\",\n          anchorLinkSymbol: \"\",\n          anchorLinkSpace: false,\n          anchorClassName: \"anchor\",\n          anchorLinkSymbolClassName: \"octicon octicon-link\"\n        },\n        mermaid: {\n          theme: \"default\"\n        },\n        image: {\n          hAlign: \"left\",\n          viewer: true\n        }\n      }\n    };\n  },\n\n  components: {\n    MarkdownItVue,\n    Header,\n    PurchaseButton\n  },\n  computed: {\n    isDarkMode() {\n      return this.$store.getters.isDarkMode;\n    }\n\n  },\n  methods: {\n    goLogin() {},\n\n    getcartoonUrl: async () => {\n      const query = `{\n        advancedReactCollection{\n          items{\n            illustration{\n              url\n            }\n            title,\n            description,\n            content\n          }\n        }\n      }`;\n      const fetchUrl = `https://graphql.contentful.com/content/v1/spaces/${process.env.VUE_APP_CONTENTFUL_SPACE_ID}/`;\n      const fetchOptions = {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${process.env.VUE_APP_CONTENTFUL_ACCESS_TOKEN}`,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          query\n        })\n      };\n\n      try {\n        const response = await fetch(fetchUrl, fetchOptions).then(response => response.json());\n        return response.data.advancedReactCollection.items;\n      } catch (error) {\n        throw new Error(\"Could not receive the data from Contentful!\");\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AAkCA;AACA;AACA;AACA;EACA;IACA,2CADA,CAEA;;IACA;IACA;;IAEA;MACAA;IACA;EACA,CAVA;;EAWAC;IACA;MACAC,YADA;MAEAC,QAFA;MAGAH,YAHA;MAIAI;QACAC;UACAC;YACAC,gBADA;YAEAC;UAFA;QADA,CADA;QAOAC;UACAC,mBADA;UAEAC;QAFA,CAPA;QAWAC,qBAXA;QAYAC;UACAC,gBADA;UAEAC,eAFA;UAGAC,mBAHA;UAIAC,oBAJA;UAKAC,sBALA;UAMAC,yBANA;UAOAC;QAPA,CAZA;QAqBAC;UACAC;QADA,CArBA;QAwBAC;UACAC,cADA;UAEAC;QAFA;MAxBA;IAJA;EAkCA,CA9CA;;EA+CAC;IAAAC;IAAAC;IAAAC;EAAA,CA/CA;EAgDAC;IACAC;MACA;IACA;;EAHA,CAhDA;EAqDAC;IACAC,YADA;;IAEAC;MACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAXA;MAYA;MAEA;QACAC,cADA;QAEAC;UACAC,sEADA;UAEA;QAFA,CAFA;QAMAC;UAAAC;QAAA;MANA;;MASA;QACA,sEACAC,eADA;QAGA;MACA,CALA,CAKA;QACA;MACA;IACA;EAlCA;AArDA","names":["isPro","data","contents","index","options","linkAttributes","attrs","target","rel","katex","throwOnError","errorColor","icons","githubToc","tocFirstLevel","tocLastLevel","tocClassName","anchorLinkSymbol","anchorLinkSpace","anchorClassName","anchorLinkSymbolClassName","mermaid","theme","image","hAlign","viewer","components","MarkdownItVue","Header","PurchaseButton","computed","isDarkMode","methods","goLogin","getcartoonUrl","method","headers","Authorization","body","query","response"],"sourceRoot":"src/views","sources":["Courses.vue"],"sourcesContent":["<template>\n  <div>\n    <Header />\n    <div class=\"CourseWrapper\">\n      <div class=\"CourseHeroWrapper\">\n        <img\n          :src=\"contents[index].illustration.url\"\n          :alt=\"url\"\n          class=\"Illustration\"\n        />\n        <h1\n          :class=\"{ 'light-text': isDarkMode, 'dark-text': !isDarkMode }\"\n          class=\"Title\"\n        >\n          {{ contents[index].title }}\n        </h1>\n        <p\n          :class=\"{ 'light-text': isDarkMode, 'dark-text': !isDarkMode }\"\n          class=\"Description\"\n        >\n          {{ contents[index].description }}\n        </p>\n      </div>\n    </div>\n    <markdown-it-vue\n      v-show=\"isPro\"\n      :options=\"options\"\n      :content=\"contents[index].content\"\n    />\n    <PurchaseButton v-show=\"!isPro\" gotoWhere=\"goLogin\" />\n  </div>\n</template>\n\n<script>\nimport MarkdownItVue from \"markdown-it-vue\";\nimport Header from \"@/components/Headers/Header.vue\";\nimport PurchaseButton from \"@/components/button/PurchaseButton.vue\";\nexport default {\n  async created() {\n    this.contents = await this.getcartoonUrl();\n    // console.log(this.contents);\n    const params = this.$route.params;\n    this.index = params.index;\n\n    if (sessionStorage.getItem(\"email\") !== null) {\n      isPro = true;\n    }\n  },\n  data() {\n    return {\n      contents: [],\n      index: 0,\n      isPro: false,\n      options: {\n        linkAttributes: {\n          attrs: {\n            target: \"_blank\",\n            rel: \"noopener\",\n          },\n        },\n        katex: {\n          throwOnError: false,\n          errorColor: \"#cc0000\",\n        },\n        icons: \"font-awesome\",\n        githubToc: {\n          tocFirstLevel: 2,\n          tocLastLevel: 3,\n          tocClassName: \"toc\",\n          anchorLinkSymbol: \"\",\n          anchorLinkSpace: false,\n          anchorClassName: \"anchor\",\n          anchorLinkSymbolClassName: \"octicon octicon-link\",\n        },\n        mermaid: {\n          theme: \"default\",\n        },\n        image: {\n          hAlign: \"left\",\n          viewer: true,\n        },\n      },\n    };\n  },\n  components: { MarkdownItVue, Header, PurchaseButton },\n  computed: {\n    isDarkMode() {\n      return this.$store.getters.isDarkMode;\n    },\n  },\n  methods: {\n    goLogin() {},\n    getcartoonUrl: async () => {\n      const query = `{\n        advancedReactCollection{\n          items{\n            illustration{\n              url\n            }\n            title,\n            description,\n            content\n          }\n        }\n      }`;\n      const fetchUrl = `https://graphql.contentful.com/content/v1/spaces/${process.env.VUE_APP_CONTENTFUL_SPACE_ID}/`;\n\n      const fetchOptions = {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${process.env.VUE_APP_CONTENTFUL_ACCESS_TOKEN}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ query }),\n      };\n\n      try {\n        const response = await fetch(fetchUrl, fetchOptions).then((response) =>\n          response.json()\n        );\n        return response.data.advancedReactCollection.items;\n      } catch (error) {\n        throw new Error(\"Could not receive the data from Contentful!\");\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.CourseWrapper {\n  display: grid;\n  background: linear-gradient(200.44deg, #4316db 13.57%, #9076e7 98.38%);\n  justify-content: center;\n  text-align: center;\n}\n.CourseHeroWrapper {\n  display: grid;\n  gap: 20px;\n  max-width: 1234px;\n  margin: 0 auto;\n  padding: 0 20px;\n}\n.Illustration {\n  padding-top: 140px;\n  max-width: 400px;\n  width: 100%;\n  margin: 0 auto;\n}\n.Title {\n  max-width: 500px;\n  margin: 0 auto;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 60px;\n  line-height: 72px;\n  mix-blend-mode: normal;\n  text-shadow: 0px 20px 40px rgba(0, 0, 0, 0.3);\n}\n.Description {\n  max-width: 600px;\n  margin: 0 auto;\n  font-style: normal;\n  font-size: 20px;\n  line-height: 140%;\n  mix-blend-mode: normal;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}